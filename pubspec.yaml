name: shortly
description: "A beautiful url shorter which is working with the bitly api"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0

  # BubbleBottomBar is a Flutter widget designed by cubertodesign and developed by westdabestdb
  bubble_bottom_bar: ^2.0.0

  # Concentric Transition effect. Useful for onboarding, page transitions etc.
  concentric_transition: ^1.0.3

  # Flutter plugin for reading and writing simple key-value pairs. Wraps
  # NSUserDefaults on iOS and SharedPreferences on Android.
  shared_preferences: ^2.0.15

  # An SVG rendering and widget library for Flutter, which allows painting and displaying Scalable Vector Graphics 1.1 files.
  flutter_svg: ^2.0.14

  # Flutter plugin for getting commonly used locations on host platform file systems, such as the temp and app data directories.
  path_provider: ^2.0.0

  # A reactive caching and data-binding framework. Riverpod makes working with asynchronous code a breeze.
  flutter_riverpod: ^2.6.1

  # A powerful HTTP networking package, supports Interceptors, Aborting and canceling a request, Custom adapters, Transformers, etc.
  dio: ^5.7.0

  # Toastification is a Flutter package that allows you to easily show toast and notification messages in your application.
  toastification: ^2.3.0

  # Flutter plugin for Firebase Core, enabling connecting to multiple Firebase apps.
  firebase_core: ^3.7.0

  # Flutter plugin for Firebase Auth, enabling Android and iOS
  # authentication using passwords, phone numbers and identity providers like Google, Facebook and Twitter.
  firebase_auth: ^5.3.2

  # Flutter plugin for Firebase Database, a cloud-hosted NoSQL
  # database with realtime data syncing across Android and iOS clients, and offline access.
  firebase_database: ^11.1.5

  # Contains code to deal with internationalized/localized messages, date
  # and number formatting and parsing, bi-directional text, and other internationalization issues.
  intl: ^0.19.0


# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/onboarding/internet-global.svg
    - assets/onboarding/library.svg
    - assets/onboarding/friends.svg
    - assets/onboarding/no_data_view.svg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
